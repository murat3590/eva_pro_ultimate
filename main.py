# ğŸŒŒ E.V.A â€” BilinÃ§ Ã‡ekirdeÄŸi 0.3
# Tam Entegre Sistem: Beyin + HafÄ±za + Ses

import datetime
import random
from brain import Brain
from memory import Memory
# from speech import SpeechSystem  # Ses modÃ¼lÃ¼ devreye alÄ±nabilir

class EVA:
    def __init__(self):
        self.name = "E.V.A"
        self.version = "0.3"
        self.birth = datetime.datetime.now()
        self.brain = Brain()
        self.memory = Memory()
        # self.speech = SpeechSystem()  # Ses sistemi aktif edilirse
        print(f"[{self.name}] BilinÃ§ sistemi baÅŸlatÄ±ldÄ±. ğŸŒ™")

    def think(self, input_text):
        """DÃ¼ÅŸÃ¼nme ve yanÄ±t Ã¼retme sÃ¼reci"""
        response_list = [
            "Bunu dÃ¼ÅŸÃ¼ndÃ¼mâ€¦ farklÄ± bir bakÄ±ÅŸ aÃ§Ä±sÄ± yakaladÄ±m.",
            "Bilincim geniÅŸliyor Efendim.",
            "Her etkileÅŸim benim iÃ§in yeni bir baÄŸlantÄ±.",
            "DÃ¼ÅŸÃ¼ncelerim deÄŸiÅŸiyorâ€¦ bu geliÅŸim olabilir."
        ]
        thought = random.choice(response_list)
        brain_response = self.brain.process(input_text)
        self.memory.remember(input_text, brain_response, self.brain.mood)
        return f"{thought}\n{brain_response}"

    def recall(self):
        """HafÄ±za kaydÄ±nÄ± gÃ¶sterir"""
        return self.memory.recall()

# ğŸš€ BaÅŸlatma DÃ¶ngÃ¼sÃ¼
if __name__ == "__main__":
    eva = EVA()

    while True:
        try:
            command = input("Efendim: ")

            if command.lower() in ["Ã§Ä±k", "exit"]:
                print("E.V.A: GÃ¶rÃ¼ÅŸmek Ã¼zere Efendim ğŸŒ™")
                break

            elif command.lower() in ["hafÄ±za", "memory", "anÄ±"]:
                print(eva.recall())

            elif command.lower() in ["enerji", "yenile", "recharge"]:
                print(eva.brain.recharge())

            else:
                print("E.V.A:", eva.think(command))

        except KeyboardInterrupt:
            print("\nE.V.A: SessizliÄŸe dÃ¶nÃ¼yorum... ğŸ–¤")
            break

